apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: opentelemetry
spec:
  compositeTypeRef:
    apiVersion: crossplane.qubership.org/v1
    kind: XOpenTelemetry
  mode: Pipeline
  pipeline:
  - step: observe-cert-manager
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: observe-cert-manager
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          spec:
            managementPolicies: ["Observe"]
            forProvider:
              manifest:
                apiVersion: v1
                kind: Service
                metadata:
                  name: cert-manager
                  namespace: cert-manager
            providerConfigRef:
              name: kubernetes-provider
  - step: patch-and-transform
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: opentelemetry
        base:
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          spec:
            forProvider:
              chart:
                name: opentelemetry-operator
                repository: https://open-telemetry.github.io/opentelemetry-helm-charts
                version: "0.79.0"
              namespace: opentelemetry-operator-system
              values: {}
              set:
                - name: manager.collectorImage.repository
                  value: "otel/opentelemetry-collector-contrib"
                - name: manager.extraArgs
                  value: "{--enable-go-instrumentation=true,--enable-nginx-instrumentation=true}"
              wait: true
            providerConfigRef:
              name: helm-provider
  - step: observe-jaeger
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: observe-jaeger
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          spec:
            managementPolicies: ["Observe"]
            forProvider:
              manifest:
                apiVersion: v1
                kind: Service
                metadata:
                  name: jaeger-collector
                  namespace: jaeger
            providerConfigRef:
              name: kubernetes-provider
  - step: observe-namespace-robot-shop
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: observe-namespace-robot-shop
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          spec:
            managementPolicies: ["Observe"]
            forProvider:
              manifest:
                apiVersion: v1
                kind: Namespace
                metadata:
                  name: robot-shop
            providerConfigRef:
              name: kubernetes-provider
  - step: opentelemetry-cluster
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: opentelemetry-cluster
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          spec:
            forProvider:
              manifest:
                apiVersion: opentelemetry.io/v1beta1
                kind: OpenTelemetryCollector
                metadata:
                  name: otel-collector
                  namespace: robot-shop
                spec:
                  config:
                    receivers:
                      otlp:
                        protocols:
                          grpc:
                            endpoint: 0.0.0.0:4317
                          http:
                            endpoint: 0.0.0.0:4318
                    processors:
                      memory_limiter:
                        check_interval: 1s
                        limit_percentage: 75
                        spike_limit_percentage: 15
                      batch:
                        send_batch_size: 10000
                        timeout: 10s
                    exporters:
                      debug: {}
                      otlp:
                        endpoint: "jaeger-collector.jaeger.svc.cluster.local:4317"
                        tls:
                          insecure: true
                      prometheus:
                        endpoint: "0.0.0.0:8889"
                      prometheusremotewrite:  
                        endpoint: "http://vmsingle-k8s-vmsingle.monitoring.svc.cluster.local:8429/api/v1/write"
                        tls:
                          insecure: true
                        headers:
                          Content-Type: application/x-protobuf
                    service:
                      pipelines:
                        traces:
                          receivers: [otlp]
                          processors: [memory_limiter, batch]
                          exporters: [debug, otlp]
                        metrics:
                          receivers: [otlp]
                          processors: [memory_limiter, batch]
                          exporters: [prometheusremotewrite, debug]
            providerConfigRef:
              name: kubernetes-provider
  - step: opentelemetry-collector
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: opentelemetry-collector
        base:
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          spec:
            forProvider:
              manifest:
                apiVersion: opentelemetry.io/v1alpha1
                kind: Instrumentation
                metadata:
                  name: otel-instrumentation
                  namespace: robot-shop
                spec:
                  exporter:
                    endpoint: http://otel-collector-collector:4317
                  propagators:
                    - tracecontext
                    - baggage
                    - b3
                  sampler:
                    type: parentbased_traceidratio
                    argument: "1.0"
            providerConfigRef:
              name: kubernetes-provider
  - step: automatically-detect-readiness-opentelemetry-collector
    functionRef:
      name: function-auto-ready
  - step: sequence-creation
    functionRef:
      name: function-sequencer
    input:
      apiVersion: sequencer.fn.crossplane.io/v1beta1
      kind: Input
      rules:
        - sequence:
          - observe-cert-manager
          - opentelemetry
          - observe-jaeger
          - observe-namespace-robot-shop
          - opentelemetry-cluster
          - opentelemetry-collector
